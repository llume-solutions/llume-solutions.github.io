---
import { Image } from "astro:assets";
import OurServicesItem from "../components/OurServicesItem.astro";
import OurWorkItem from "../components/OurWorkItem.astro";
import SplitText from "../components/SplitText.astro";
import sphereImg from "../assets/sphere.svg";
import RoundedButton from "../components/RoundedButton.astro";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>LLUME, 3D Web Specialists</title>
	</head>
	<body>
		<nav></nav>
		<main>
			<section class="relative">
				<div class="container relative z-10">
					<article class="pt-24 lg:pt-40 pb-6 flex flex-col gap-6 text-center min-h-svh md:min-h-[unset]">
						<div class="place-items-center mb-12">
							<h1 class="text-3xl md:text-5xl mb-4">We're LLUME, the 3D web specialists</h1>
							<p class="text-xl mb-12">We design and build 3D product configurators, virtual showrooms and interactive experiences</p>
							<div class="flex gap-4">
								<button class="bg-gray-900 text-white py-2 px-8 rounded-full">Book a call</button>
								<button class="border-2 border-pink-600 py-2 px-8 rounded-full text-pink-700">View work</button>
							</div>
						</div>
						<div class="flex-1 md:flex-none md:aspect-[5/3] rounded-xl bg-[#000000d7] mix-blend-screen"></div>
					</article>
				</div>
				<div class="wrapper">
					<div class="gradient gradient-1"></div>
					<div class="gradient gradient-2"></div>
					<div class="gradient gradient-3"></div>
				</div>
			</section>
			<section class="py-16">
				<div class="container">
					<article>
						<h1 class="mb-12 tracking-wider">OUR PHILOSOPHY</h1>
						<div class="flex flex-col gap-8 text-xl lg:max-w-[66%]">
							<p id="philosophy-1">We create captivating 3D experiences that anyone can dive in to by just tapping on a link.</p>
							<p>No downloads. No installations. Just pure, jaw-dropping magic, instantly accessible in your browser.</p>
							<p>That's the power of WebGL - video game-level fidelity in a browser. From smartphones to desktop to immersive headset.</p>
							<p>But if your developers are inexperienced, they run the chance of creating an unmaintainable, slow mess.</p>
							<p>
								Or, if they lack the expertise in art, animation and rendering, you run the risk of entering uncanny valley, where the 3D experience feel eerily
								off. The ultimate turn-off.
							</p>
							<p>That's why we focus 100% on 3D web dev and design. Because that's the only way to unmatched mastery in this discipline.</p>
						</div>
					</article>
				</div>
			</section>
			<section class="py-16">
				<div class="container">
					<article>
						<h1 class="mb-12">OUR WORK</h1>
						<div class="grid grid-cols-1 lg:grid-cols-3 gap-2">
							<OurWorkItem
								class="lg:row-span-2 lg:col-span-2 min-h-[420px]"
								innerClass="lg:p-8"
								client="In-house"
								heading="Visualising NASA snow ice data"
								subheading="Visualising dense, complex data in 3D space to empower more people to understand the numbers and join the conversation."
							/>
							<OurWorkItem
								class=""
								innerClass="!p-4"
								client="In-house"
								heading="Visualising NASA snow ice data"
								subheading="Visualising dense, complex data in 3D space to empower more people to understand the numbers and join the conversation."
							/>
							<OurWorkItem
								class=""
								innerClass="!p-4"
								client="In-house"
								heading="Visualising NASA snow ice data"
								subheading="Visualising dense, complex data in 3D space to empower more people to understand the numbers and join the conversation."
							/>
							<OurWorkItem
								class="lg:col-span-3 min-h-[420px]"
								innerClass="lg:p-8"
								client="In-house"
								heading="Visualising NASA snow ice data"
								subheading="Visualising dense, complex data in 3D space to empower more people to understand the numbers and join the conversation."
							/>
							<!-- <OurWorkItem class="md:col-span-2 bg-pink-500 aspect-video" client="In-house" heading="Product visualiser" />
							<OurWorkItem class="md:col-span-2 bg-pink-500 aspect-video" /> -->
						</div>
					</article>
				</div>
			</section>
			<section class="py-20 bg-gray-950 text-gray-50">
				<div class="container">
					<article class="grid lg:grid-cols-5 gap-12">
						<div class="lg:col-span-2 flex flex-col gap-4 items-start">
							<Image src={sphereImg} alt="A trippy sphere" class="w-16" />
							<h1>OUR SERVICES</h1>
							<p>Need to discuss in more detail? Let's talk!</p>
						</div>
						<div class="grid gap-3 lg:col-span-3">
							<OurServicesItem title="Custom 3D three.js and babylon.js development">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
							<OurServicesItem title="3D product configurators">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
							<OurServicesItem title="Virtual showrooms">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
							<OurServicesItem title="3D data visualisations">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
						</div>
					</article>
				</div>
			</section>
			<footer class="h-96 bg-gray-200"></footer>
		</main>
	</body>

	<script>
		// import { gsap } from "gsap";
		// import { ScrollTrigger } from "gsap/ScrollTrigger";
		// gsap.registerPlugin(ScrollTrigger);

		// gsap.to("#philosophy-1", {
		// 	scrollTrigger: {
		// 		trigger: "#philosophy-1",
		// 		start: "top 50%",
		// 	},
		// 	x: 500,
		// });
	</script>

	<style is:global>
		@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap");

		@tailwind base;
		@tailwind components;
		@tailwind utilities;

		html,
		body {
			margin: 0;
			width: 100%;
			height: 100%;
			font-family: "Open Sans", serif;
			font-optical-sizing: auto;
			font-weight: 400;
			font-style: normal;
			font-variation-settings: "wdth" 100;

			@apply text-gray-900 bg-gray-50;
		}
		@layer base {
			h1 {
				@apply text-3xl;
			}
			p,
			summary {
				@apply tracking-wide;
			}
		}

		@layer components {
			.container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 0 1rem;
			}
		}

		/* https://fracergu.github.io/css-plasma-background-generator/ */
		.wrapper {
			position: absolute;
			top: 10vh;
			left: 0;
			width: 100%;
			height: 100%;
			overflow: hidden;
			filter: blur(150px);
		}

		.gradient {
			position: absolute;
			border-radius: 100%;
			opacity: 0.6;
			mix-blend-mode: screen;
			animation-iteration-count: infinite;
			animation-timing-function: cubic-bezier(0.1, 0, 0.9, 1);
		}

		.gradient-1 {
			background: rgb(81, 8, 146) none repeat scroll 0% 0% / auto padding-box border-box;
			width: 700px;
			height: 700px;
			animation-duration: 8s;
			opacity: 0.6;
			left: 60%;
			top: 40%;
			z-index: -2;
			animation-name: animation-gradient-1;
		}
		.gradient-2 {
			background: rgb(55, 32, 173) none repeat scroll 0% 0% / auto padding-box border-box;
			width: 600px;
			height: 600px;
			animation-duration: 8s;
			opacity: 0.6;
			left: 40%;
			top: 60%;
			z-index: -1;
			animation-name: animation-gradient-2;
		}
		.gradient-3 {
			background: rgb(115, 60, 29) none repeat scroll 0% 0% / auto padding-box border-box;
			width: 500px;
			height: 500px;
			animation-duration: 8s;
			opacity: 0.6;
			left: 50%;
			top: 50%;
			z-index: -3;
			animation-name: animation-gradient-3;
		}

		@keyframes animation-gradient-1 {
			0% {
				transform: translateY(-50%) translateX(-50%) rotate(-20deg) translateX(20%);
			}
			25% {
				transform: translateY(-50%) translateX(-50%) skew(-15deg, -15deg) rotate(80deg) translateX(30%);
			}
			50% {
				transform: translateY(-50%) translateX(-50%) rotate(180deg) translateX(25%);
			}
			75% {
				transform: translateY(-50%) translateX(-50%) skew(15deg, 15deg) rotate(240deg) translateX(15%);
			}
			100% {
				transform: translateY(-50%) translateX(-50%) rotate(340deg) translateX(20%);
			}
		}

		@keyframes animation-gradient-2 {
			0% {
				transform: translateY(-50%) translateX(-50%) rotate(40deg) translateX(-20%);
			}
			25% {
				transform: translateY(-50%) translateX(-50%) skew(15deg, 15deg) rotate(110deg) translateX(-5%);
			}
			50% {
				transform: translateY(-50%) translateX(-50%) rotate(210deg) translateX(-35%);
			}
			75% {
				transform: translateY(-50%) translateX(-50%) skew(-15deg, -15deg) rotate(300deg) translateX(-10%);
			}
			100% {
				transform: translateY(-50%) translateX(-50%) rotate(400deg) translateX(-20%);
			}
		}

		@keyframes animation-gradient-3 {
			0% {
				transform: translateY(-50%) translateX(-50%) translateX(-15%) translateY(10%);
			}
			20% {
				transform: translateY(-50%) translateX(-50%) translateX(20%) translateY(-30%);
			}
			40% {
				transform: translateY(-50%) translateX(-50%) translateX(-25%) translateY(-15%);
			}
			60% {
				transform: translateY(-50%) translateX(-50%) translateX(30%) translateY(20%);
			}
			80% {
				transform: translateY(-50%) translateX(-50%) translateX(5%) translateY(35%);
			}
			100% {
				transform: translateY(-50%) translateX(-50%) translateX(-15%) translateY(10%);
			}
		}
	</style>
</html>
