---
import { Image } from "astro:assets";
import OurServicesItem from "../components/OurServicesItem.astro";
import OurWorkItem from "../components/OurWorkItem.astro";
import SplitText from "../components/SplitText.astro";
import sphereImg from "../assets/sphere.svg";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>LLUME, 3D Web Specialists</title>
	</head>
	<body>
		<nav></nav>
		<main>
			<section class="intro relative">
			
				<div class="container">
					<article class="pt-24 lg:pt-40 pb-6 flex flex-col gap-6 text-center h-svh">
						<div class="place-items-center mb-12">
							<h1 class="text-5xl mb-4">We're LLUME, the 3D web specialists</h1>
							<p class="text-xl mb-12">We design and build 3D product configurators, virtual showrooms and interactive experiences</p>
							<div class="flex gap-4">
								<button class="bg-gray-900 text-white py-2 px-8 rounded-full">Book a call</button>
								<button class="border-2 border-pink-600 p7-2 px-8 rounded-full text-pink-700">View work</button>
							</div>
						</div>
						<div class="flex-1 bg-black rounded-xl">123</div>
					</article>
				</div>
			</section>
			<section class="py-12 bg-pink-500">
				<div class="container">
					<article>
						<h1 class="mb-12 tracking-wider">OUR PHILOSOPHY</h1>
						<div class="flex flex-col gap-8 text-xl lg:max-w-[66%]">
							<p>We create captivating 3D experiences that anyone can dive in to by just tapping on a link.</p>
							<p>No downloads. No installations. Just pure, jaw-dropping magic, instantly accessible in your browser.</p>
							<p>That's the power of WebGL - video game-level fidelity in a browser. From smartphones to desktop to immersive headset.</p>
							<p>But if your developers are inexperienced, they run the chance of creating an unmaintainable, slow mess.</p>
							<p>
								Or you'll end up with uncanny valley, where a lack of expertise in rendering, animation and art make the 3D experience feel eerily off. The
								ultimate turn-off.
							</p>
							<p>That's why we focus 100% on 3D web dev and design. Because that's the only way to unmatched mastery in this discipline.</p>
						</div>
					</article>
				</div>
			</section>

			<section class="py-12 bg-gray-400">
				<div class="container">
					<article>
						<h1 class="mb-12">OUR WORK</h1>
						<div class="grid grid-cols-1 md:grid-cols-2 gap-8">
							<OurWorkItem />
							<OurWorkItem />
						</div>
					</article>
				</div>
			</section>
			<section class="py-12 bg-gray-950 text-gray-50">
				<div class="container">
					<article class="grid lg:grid-cols-5">
						<div class="lg:col-span-2 gap-1 flex flex-col gap-4">
							<Image src={sphereImg} alt="A trippy sphere" class="w-16" />
							<h1 class="mb-12">OUR SERVICES</h1>
						</div>
						<div class="grid gap-6 lg:col-span-3">
							<OurServicesItem title="Custom 3D three.js and babylon.js development">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
							<OurServicesItem title="3D product configurators">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
							<OurServicesItem title="Virtual showrooms">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
							<OurServicesItem title="3D data visualisations">
								<p>Custom three.js dev</p>
								<p>Custom three.js dev</p>
							</OurServicesItem>
						</div>
					</article>
				</div>
			</section>
			<footer class="h-96 bg-gray-200"></footer>
		</main>
	</body>

	<style is:global>
		@tailwind base;
		@tailwind components;
		@tailwind utilities;

		html,
		body {
			margin: 0;
			width: 100%;
			height: 100%;
			@apply text-gray-900 bg-gray-50;
		}
		@layer base {
			h1 {
				@apply text-3xl;
			}
			p,
			summary {
				@apply tracking-wide;
			}
		}

		@layer components {
			.gradient-container {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				overflow: hidden;
				filter: blur(150px);
			}

			.gradient {
				position: absolute;
				border-radius: 100%;
				opacity: 0.6;
				mix-blend-mode: screen;
				animation-iteration-count: infinite;
				animation-timing-function: cubic-bezier(0.1, 0, 0.9, 1);
			}

			.gradient-1 {
				background: rgb(62, 63, 96) none repeat scroll 0% 0% / auto padding-box border-box;
				width: 700px;
				height: 700px;
				animation-duration: 11s;
				opacity: 0.6;
				left: 60%;
				top: 40%;
				z-index: -2;
				animation-name: animation-gradient-1;
			}
			.gradient-2 {
				background: rgb(151, 45, 54) none repeat scroll 0% 0% / auto padding-box border-box;
				width: 600px;
				height: 600px;
				animation-duration: 11s;
				opacity: 0.6;
				left: 40%;
				top: 60%;
				z-index: -1;
				animation-name: animation-gradient-2;
			}
			.gradient-3 {
				background: rgb(239, 92, 95) none repeat scroll 0% 0% / auto padding-box border-box;
				width: 500px;
				height: 500px;
				animation-duration: 11s;
				opacity: 0.6;
				left: 50%;
				top: 50%;
				z-index: -3;
				animation-name: animation-gradient-3;
			}
		}

		.container {
			max-width: 1200px;
			margin: 0 auto;
			padding: 0 1rem;
		}

		@keyframes animation-gradient-1 {
			0% {
				transform: translateY(-50%) translateX(-50%) rotate(-20deg) translateX(20%);
			}
			25% {
				transform: translateY(-50%) translateX(-50%) skew(-15deg, -15deg) rotate(80deg) translateX(30%);
			}
			50% {
				transform: translateY(-50%) translateX(-50%) rotate(180deg) translateX(25%);
			}
			75% {
				transform: translateY(-50%) translateX(-50%) skew(15deg, 15deg) rotate(240deg) translateX(15%);
			}
			100% {
				transform: translateY(-50%) translateX(-50%) rotate(340deg) translateX(20%);
			}
		}

		@keyframes animation-gradient-2 {
			0% {
				transform: translateY(-50%) translateX(-50%) rotate(40deg) translateX(-20%);
			}
			25% {
				transform: translateY(-50%) translateX(-50%) skew(15deg, 15deg) rotate(110deg) translateX(-5%);
			}
			50% {
				transform: translateY(-50%) translateX(-50%) rotate(210deg) translateX(-35%);
			}
			75% {
				transform: translateY(-50%) translateX(-50%) skew(-15deg, -15deg) rotate(300deg) translateX(-10%);
			}
			100% {
				transform: translateY(-50%) translateX(-50%) rotate(400deg) translateX(-20%);
			}
		}

		@keyframes animation-gradient-3 {
			0% {
				transform: translateY(-50%) translateX(-50%) translateX(-15%) translateY(10%);
			}
			20% {
				transform: translateY(-50%) translateX(-50%) translateX(20%) translateY(-30%);
			}
			40% {
				transform: translateY(-50%) translateX(-50%) translateX(-25%) translateY(-15%);
			}
			60% {
				transform: translateY(-50%) translateX(-50%) translateX(30%) translateY(20%);
			}
			80% {
				transform: translateY(-50%) translateX(-50%) translateX(5%) translateY(35%);
			}
			100% {
				transform: translateY(-50%) translateX(-50%) translateX(-15%) translateY(10%);
			}
		}
	</style>
</html>
